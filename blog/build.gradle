plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.spring'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

//프로젝트 단위 변수 설정
def profile = project.hasProperty('profile') ? project.property('profile') : 'local'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	//implementation 'org.springframework.security:spring-security-crypto'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	
	implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.3'
	implementation group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '3.0.3'
	implementation group: 'org.mybatis', name: 'mybatis', version: '3.5.16'
	implementation group: 'org.mybatis', name: 'mybatis-spring', version: '3.0.3'

	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	
	compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.32'	
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
}

tasks.named('bootRun') {
    args = ["--spring.profiles.active=${profile}"]
}

tasks.named('test') {
	useJUnitPlatform()
	systemProperty 'spring.profiles.active', profile
}

// 중복 파일 처리 전략 설정
tasks.named('processResources') {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

bootJar {
    archiveFileName = 'app.jar'
    manifest {
        attributes(
            'Main-Class': 'com.spring.blog.BlogApplication'
        )
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

println "Profile: ${profile}"
sourceSets {
	main {
		resources {
			srcDirs "src/main/resources", "src/main/resources-env/${profile}"
		}
	}
}
sourceSets.main.resources.srcDirs.each { println "Resource dir: $it" }
